@model motovalle.Ecommerce.Models.ViewModels.Checkout.CheckoutDataViewModel

@{
    ViewData["Title"] = "Wompi Gateway Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="b-pageHeader checkout">
    <div class="container">
        <h1 class=" wow zoomInLeft" data-wow-delay="0.5s">Compras</h1>
        <div class="b-pageHeader__search wow zoomInRight" data-wow-delay="0.5s">
            <h3>Bolsa de compras</h3>
        </div>
    </div>
</section><!--b-pageHeader-->

<div class="b-breadCumbs s-shadow">
    <div class="container wow zoomInUp" data-wow-delay="0.5s">
        <a asp-action="Index" asp-controller="Home" class="b-breadCumbs__page">Home</a>
        <span class="fa fa-angle-right"></span><a asp-action="Index" asp-controller="ShoppigCart" class="b-breadCumbs__page m-active">Compras</a>
        <span class="fa fa-angle-right"></span><a asp-action="Checkout" asp-controller="ShoppigCart" class="b-breadCumbs__page m-active">Información de compra</a>
    </div>
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-danger text-center wow zoomInUp" role="alert" data-wow-delay="0.5s">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <strong>¡Ups!..</strong> @ViewBag.Message &#128577;
        </div>
    }
</div><!--b-breadCumbs-->

<div class="b-submit">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding: 1rem; border: 1px solid rgb(238, 238, 238); margin: 0rem 0 2rem 0;">
                @await Component.InvokeAsync("ShoppingCartSummaryCheckout")
            </div>
            <div class="col-lg-3 col-md-4 col-sm-5 col-xs-6">
                @{ await Html.RenderPartialAsync("~/Views/Shared/ShoppingCart/_ShoppingCartStepsPartial.cshtml", 4); }
            </div>
            <div class="col-lg-9 col-md-8 col-sm-7 col-xs-6">
                <div class="b-submit__main">
                    <header class="s-headerSubmit s-lineDownLeft wow zoomInUp" data-wow-delay="0.2s">
                        <h2>Resumen completo</h2>
                    </header>
                    <div class="row fadeIn">
                        <div class="col-sm-12">
                            @{ await Html.RenderPartialAsync("~/Views/Shared/ShoppingCart/_SummaryCustomerDataPartial.cshtml", Model);}
                        </div>
                    </div>

                    <div class="fadeIn text-center">
                        <section class="text-center" style="margin: 2rem 0rem">
                            <form id="frmWompiWidget">
                                <!--Step 2 Customer Info-->
                                <div>
                                    <input asp-for="CustomerData.Email" type="hidden" />
                                    <input asp-for="CustomerData.FristName" type="hidden" />
                                    <input asp-for="CustomerData.LastName" type="hidden" />
                                    <input asp-for="CustomerData.IDType" type="hidden" />
                                    <input asp-for="CustomerData.IDNumber" type="hidden" />
                                    <input asp-for="CustomerData.PhoneNumber" type="hidden" />
                                    <input asp-for="CustomerData.AlternateNumber" type="hidden" />
                                    <input asp-for="CustomerData.CompanyName" type="hidden" />
                                </div>
                                <!--Step 3 Addresess Info-->
                                <div>
                                    <input asp-for="CustomerData.AddressesData.Country" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.State" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.City" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.Address" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.ZipCode" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.BillState" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.BillCity" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.BillAddress" type="hidden" />
                                    <input asp-for="CustomerData.AddressesData.BillZipCode" type="hidden" />
                                </div>
                                <!--Step 4 Payment Info-->
                                <div>
                                    <input asp-for="PaymentWayData.TotalAmount" type="hidden" />
                                    <input asp-for="PaymentWayData.PaymentWayOption" type="hidden" />
                                    <input asp-for="PaymentWayData.GatewayPayment" type="hidden" />
                                    <input asp-for="PaymentWayData.FundingRequestInstitution" type="hidden" />
                                    <input asp-for="PaymentWayData.PartialAmount" type="hidden" />
                                    <input asp-for="PaymentWayData.ExternalReference" type="hidden" />
                                </div>
                                <!-- Base Form -->
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="b-submit__main-element">
                                            <label><input type="checkbox" name="HabeasData" id="HabeasData" required style="width: 18px; height: 18px; visibility:visible; position: relative;" /> Acepto las <a href="~/files/POLITICA DATOS PERSONALES MOTOVALLE[2336].pdf" rel="noreferrer" target="_blank" class="p-0 m-0">políticas de privacidad</a></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-offset-1">
                                        @{ await Html.RenderPartialAsync("_Recaptcha"); }
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary" style="border-radius: 25px; padding: 1rem 5rem;"><i class="fa fa-shield"></i> Pagar con <strong>Wompi</strong></button>
                            </form>
                        </section>
                    </div>

                    <div class="row">
                        <div class="col-12 text-center">
                            <img src="~/media/brands/pagos-seguros-por-wompi.png" alt="Wompi" title="Wompi" loading="lazy" class="img-responsive" width="85%" style="margin: 2.5em;">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div><!--b-submit-->

@section Scripts{
    <script type="text/javascript" src="https://checkout.wompi.co/widget.js"></script>

    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        (() => {
            const $bSubmit = document.querySelector(".b-submit");
            setTimeout(() => {
                const offsetTop = $bSubmit.offsetTop;
                scroll({
                    top: offsetTop,
                    behavior: "smooth"
                });
            }, 530);

            const $frmWompiWidget = document.querySelector("#frmWompiWidget");
            $frmWompiWidget.addEventListener('submit', async (e) => {
                e.preventDefault();
                const gResponse = grecaptcha.getResponse();
                const $habeasData = document.querySelector("#HabeasData");
                if (!gResponse) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Verifica los datos ingresados',
                        text: 'Por favor valida el reCaptcha',
                        footer: '<b><a href="/Info/ContactUs">Más información</a></b>',
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });

                    return;
                }

                if (!$habeasData.checked) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Verifica los datos ingresados',
                        text: 'Por favor acepta los términos y condiciones',
                        footer: '<b><a href="/Info/ContactUs">Más información</a></b>',
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });

                    return;
                }

                ////Question
                const areYouSure = await Swal.fire({
                    title: '¿Estás completamente seguro de continuar?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '¡Sí!',
                    allowOutsideClick: false,
                    allowEscapeKey: false
                });

                if (areYouSure.isConfirmed) {
                    ////Validate Stock
                    const result = await ValidateStock();
                    if (!result) {
                        return;
                    }

                    debugger;
                    const orderCreateRequest = await fetch('/ShoppingCart/CreateTempOrder/', {
                        method: "POST",
                        body: new FormData(e.target)
                    });

                    if (orderCreateRequest.ok) {
                        const orderCreateResult = await orderCreateRequest.json();
                        const checkout = new WidgetCheckout({
                            currency: 'COP',
                            amountInCents: "@Html.Raw(Model.PaymentWayData.PaymentWayOption == PaymentWaysOptions.PartialPay ? Model.PaymentWayData.PartialAmountInCents : Model.PaymentWayData.TotalAmountInCents)",
                            reference: `${orderCreateResult.OrderNumber}`,
                            publicKey: '@ViewBag.WompiPublicKey',
                            redirectUrl: `${window.location.origin}/ShoppingCart/Wp/Resultado` // Opcional
                        });

                        checkout.open(function (result) {
                            var transaction = result.transaction;
                            console.log('Transaction ID: ', transaction.id);
                            console.log('Transaction object: ', transaction);
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Servidor no disponible',
                            text: 'Lo sentimos, intentan más tarde.',
                            footer: '<b><a href="/Info/ContactUs">Por favor infórmanos</a></b>',
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                    }
                }

                return;
            });
        })();
    </script>
}