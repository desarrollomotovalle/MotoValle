// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Ecommerce.DAL.Migrations
{
    public partial class Initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "body_styles",
                columns: table => new
                {
                    body_styles_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    body_style_name = table.Column<string>(type: "varchar(255)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_body_styles", x => x.body_styles_id);
                });

            migrationBuilder.CreateTable(
                name: "categories",
                columns: table => new
                {
                    categories_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    category_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    description = table.Column<string>(type: "varchar(255)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_categories", x => x.categories_id);
                });

            migrationBuilder.CreateTable(
                name: "customers",
                columns: table => new
                {
                    customers_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    account_number = table.Column<string>(type: "varchar(45)", nullable: true),
                    full_name = table.Column<string>(type: "varchar(100)", nullable: false),
                    email_address = table.Column<string>(type: "varchar(45)", nullable: true),
                    phone_number = table.Column<string>(type: "varchar(45)", nullable: true),
                    alternate_number = table.Column<string>(type: "varchar(45)", nullable: true),
                    bill_to_address = table.Column<string>(type: "varchar(45)", nullable: true),
                    bill_to_city = table.Column<string>(type: "varchar(45)", nullable: true),
                    bill_to_state = table.Column<string>(type: "varchar(45)", nullable: true),
                    bill_to_zipcode = table.Column<string>(type: "varchar(45)", nullable: true),
                    ship_to_address = table.Column<string>(type: "varchar(45)", nullable: true),
                    ship_to_city = table.Column<string>(type: "varchar(45)", nullable: true),
                    ship_to_state = table.Column<string>(type: "varchar(45)", nullable: true),
                    ship_to_zipcode = table.Column<string>(type: "varchar(45)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_customers", x => x.customers_id);
                });

            migrationBuilder.CreateTable(
                name: "drive_trains",
                columns: table => new
                {
                    drive_trains_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    drive_train_name = table.Column<string>(type: "varchar(255)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_drive_trains", x => x.drive_trains_id);
                });

            migrationBuilder.CreateTable(
                name: "engine_types",
                columns: table => new
                {
                    engine_types_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    engine_type_name = table.Column<string>(type: "varchar(255)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_engine_types", x => x.engine_types_id);
                });

            migrationBuilder.CreateTable(
                name: "epa_classes",
                columns: table => new
                {
                    epa_classes_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    epa_class_name = table.Column<string>(type: "varchar(45)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_epa_classes", x => x.epa_classes_id);
                });

            migrationBuilder.CreateTable(
                name: "makes",
                columns: table => new
                {
                    makes_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    make_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    description = table.Column<string>(type: "varchar(255)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_makes", x => x.makes_id);
                });

            migrationBuilder.CreateTable(
                name: "transmissions",
                columns: table => new
                {
                    transmissions_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    transmission_name = table.Column<string>(type: "varchar(255)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_transmissions", x => x.transmissions_id);
                });

            migrationBuilder.CreateTable(
                name: "warranties",
                columns: table => new
                {
                    warranties_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    warranty_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    description = table.Column<string>(type: "longtext", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_warranties", x => x.warranties_id);
                });

            migrationBuilder.CreateTable(
                name: "category_pictures",
                columns: table => new
                {
                    category_pictures_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    picture_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    description = table.Column<string>(type: "varchar(255)", nullable: true),
                    picture_url = table.Column<string>(type: "varchar(255)", nullable: false),
                    fk_categories_id = table.Column<int>(type: "int(11)", nullable: false),
                    picture_type = table.Column<string>(type: "varchar(45)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_category_pictures", x => x.category_pictures_id);
                    table.ForeignKey(
                        name: "category_pictures_categories",
                        column: x => x.fk_categories_id,
                        principalTable: "categories",
                        principalColumn: "categories_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "orders",
                columns: table => new
                {
                    orders_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    order_number = table.Column<int>(type: "int(11)", nullable: false),
                    fk_customers_id = table.Column<int>(type: "int(11)", nullable: false),
                    order_date = table.Column<DateTime>(type: "datetime", nullable: false),
                    subtotal = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    tax = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    total = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    notes = table.Column<string>(type: "varchar(255)", nullable: true),
                    invoice_url = table.Column<string>(type: "varchar(255)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_orders", x => x.orders_id);
                    table.ForeignKey(
                        name: "orders_customers",
                        column: x => x.fk_customers_id,
                        principalTable: "customers",
                        principalColumn: "customers_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "colors",
                columns: table => new
                {
                    colors_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    color_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    fk_makes_id = table.Column<int>(type: "int(11)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_colors", x => x.colors_id);
                    table.ForeignKey(
                        name: "colors_makes",
                        column: x => x.fk_makes_id,
                        principalTable: "makes",
                        principalColumn: "makes_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "models",
                columns: table => new
                {
                    models_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    fk_makes_id = table.Column<int>(type: "int(11)", nullable: false),
                    model_name = table.Column<string>(type: "varchar(45)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_models", x => x.models_id);
                    table.ForeignKey(
                        name: "makes_models",
                        column: x => x.fk_makes_id,
                        principalTable: "makes",
                        principalColumn: "makes_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "products",
                columns: table => new
                {
                    products_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    sku = table.Column<string>(type: "varchar(45)", nullable: false),
                    upc = table.Column<string>(type: "varchar(45)", nullable: true),
                    description = table.Column<string>(type: "varchar(255)", nullable: false),
                    long_description = table.Column<string>(type: "longtext", nullable: true),
                    fk_categories_id = table.Column<int>(type: "int(11)", nullable: true),
                    is_featured = table.Column<ulong>(type: "bit(1)", nullable: true),
                    cost = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    sales_price = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    quantity_in_stock = table.Column<int>(type: "int(11)", nullable: true),
                    trim = table.Column<string>(type: "varchar(255)", nullable: true),
                    msrp = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    fk_makes_id = table.Column<int>(type: "int(11)", nullable: false),
                    fk_models_id = table.Column<int>(type: "int(11)", nullable: false),
                    year = table.Column<int>(type: "int(11)", nullable: false),
                    horsepower = table.Column<int>(type: "int(11)", nullable: true),
                    gas_mileage = table.Column<string>(type: "varchar(255)", nullable: true),
                    fk_engine_types_id = table.Column<int>(type: "int(11)", nullable: true),
                    fk_epa_classes_id = table.Column<int>(type: "int(11)", nullable: true),
                    fk_drive_trains_id = table.Column<int>(type: "int(11)", nullable: true),
                    passengers = table.Column<int>(type: "int(11)", nullable: true),
                    passenger_doors = table.Column<int>(type: "int(11)", nullable: true),
                    fk_body_styles_id = table.Column<int>(type: "int(11)", nullable: true),
                    fk_transmissions_id = table.Column<int>(type: "int(11)", nullable: true),
                    base_weight = table.Column<int>(type: "int(11)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_products", x => x.products_id);
                    table.ForeignKey(
                        name: "body_styles_products",
                        column: x => x.fk_body_styles_id,
                        principalTable: "body_styles",
                        principalColumn: "body_styles_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "product_categories",
                        column: x => x.fk_categories_id,
                        principalTable: "categories",
                        principalColumn: "categories_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "drive_trains_products",
                        column: x => x.fk_drive_trains_id,
                        principalTable: "drive_trains",
                        principalColumn: "drive_trains_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "engine_types_products",
                        column: x => x.fk_engine_types_id,
                        principalTable: "engine_types",
                        principalColumn: "engine_types_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "epa_classes_products",
                        column: x => x.fk_epa_classes_id,
                        principalTable: "epa_classes",
                        principalColumn: "epa_classes_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "makes_products",
                        column: x => x.fk_makes_id,
                        principalTable: "makes",
                        principalColumn: "makes_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "models_products",
                        column: x => x.fk_models_id,
                        principalTable: "models",
                        principalColumn: "models_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "transmissions_products",
                        column: x => x.fk_transmissions_id,
                        principalTable: "transmissions",
                        principalColumn: "transmissions_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "inventory_items",
                columns: table => new
                {
                    inventory_items_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    fk_products_id = table.Column<int>(type: "int(11)", nullable: false),
                    vin = table.Column<string>(type: "varchar(100)", nullable: true),
                    fk_colors_id = table.Column<int>(type: "int(11)", nullable: true),
                    cost = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    sales_price = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    mileage = table.Column<int>(type: "int(11)", nullable: true),
                    fk_warranties_id = table.Column<int>(type: "int(11)", nullable: true),
                    is_new = table.Column<sbyte>(type: "tinyint(4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_inventory_items", x => x.inventory_items_id);
                    table.ForeignKey(
                        name: "colors_inventory_Items",
                        column: x => x.fk_colors_id,
                        principalTable: "colors",
                        principalColumn: "colors_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "products_inventory_items",
                        column: x => x.fk_products_id,
                        principalTable: "products",
                        principalColumn: "products_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "warranties_inventory_items",
                        column: x => x.fk_warranties_id,
                        principalTable: "warranties",
                        principalColumn: "warranties_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "order_details",
                columns: table => new
                {
                    order_details_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    fk_orders_id = table.Column<int>(type: "int(11)", nullable: false),
                    fk_products_id = table.Column<int>(type: "int(11)", nullable: false),
                    fk_inventory_items_id = table.Column<int>(type: "int(11)", nullable: false),
                    item_price = table.Column<decimal>(type: "decimal(19,2)", nullable: false),
                    quantity = table.Column<int>(type: "int(11)", nullable: false),
                    tax = table.Column<decimal>(type: "decimal(19,2)", nullable: true),
                    shipdate = table.Column<DateTime>(type: "datetime", nullable: true),
                    notes = table.Column<string>(unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_order_details", x => x.order_details_id);
                    table.ForeignKey(
                        name: "order_details_orders",
                        column: x => x.fk_orders_id,
                        principalTable: "orders",
                        principalColumn: "orders_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "order_details_products",
                        column: x => x.fk_products_id,
                        principalTable: "products",
                        principalColumn: "products_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "order_details_inventory_items",
                        column: x => x.fk_products_id,
                        principalTable: "inventory_items",
                        principalColumn: "inventory_items_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "shopping_cart_records",
                columns: table => new
                {
                    shopping_cart_records_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    fk_customers_id = table.Column<int>(type: "int(11)", nullable: false),
                    fk_products_id = table.Column<int>(type: "int(11)", nullable: false),
                    date_created = table.Column<DateTime>(type: "datetime", nullable: false),
                    quantity = table.Column<int>(type: "int(11)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_shopping_cart_records", x => x.shopping_cart_records_id);
                    table.ForeignKey(
                        name: "shopping_customers",
                        column: x => x.fk_customers_id,
                        principalTable: "customers",
                        principalColumn: "customers_id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "shopping_products",
                        column: x => x.fk_products_id,
                        principalTable: "products",
                        principalColumn: "products_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "inventory_item_pictures",
                columns: table => new
                {
                    inventory_item_pictures_id = table.Column<int>(type: "int(11)", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    fk_inventory_items_id = table.Column<int>(type: "int(11)", nullable: false),
                    picture_name = table.Column<string>(type: "varchar(45)", nullable: false),
                    picture_url = table.Column<string>(type: "varchar(255)", nullable: false),
                    picture_width = table.Column<int>(type: "int(11)", nullable: true),
                    picture_height = table.Column<int>(type: "int(11)", nullable: true),
                    alternate_text = table.Column<string>(type: "varchar(100)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_inventory_item_pictures", x => x.inventory_item_pictures_id);
                    table.ForeignKey(
                        name: "inventory_items_inv_itmpic",
                        column: x => x.fk_inventory_items_id,
                        principalTable: "inventory_items",
                        principalColumn: "inventory_items_id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "idxbodystyle",
                table: "body_styles",
                column: "body_style_name");

            migrationBuilder.CreateIndex(
                name: "idxcategoryname",
                table: "categories",
                column: "category_name");

            migrationBuilder.CreateIndex(
                name: "category_pictures_categories_idx",
                table: "category_pictures",
                column: "fk_categories_id");

            migrationBuilder.CreateIndex(
                name: "idxpicturename",
                table: "category_pictures",
                column: "picture_name");

            migrationBuilder.CreateIndex(
                name: "idxcolorname",
                table: "colors",
                column: "color_name");

            migrationBuilder.CreateIndex(
                name: "colors_makes_idx",
                table: "colors",
                column: "fk_makes_id");

            migrationBuilder.CreateIndex(
                name: "idxaccountnumber",
                table: "customers",
                column: "account_number");

            migrationBuilder.CreateIndex(
                name: "idxalternate",
                table: "customers",
                column: "alternate_number");

            migrationBuilder.CreateIndex(
                name: "idxemail",
                table: "customers",
                column: "email_address");

            migrationBuilder.CreateIndex(
                name: "idxfullname",
                table: "customers",
                column: "full_name");

            migrationBuilder.CreateIndex(
                name: "idxphonenumber",
                table: "customers",
                column: "phone_number");

            migrationBuilder.CreateIndex(
                name: "idxdrivetrainname",
                table: "drive_trains",
                column: "drive_train_name");

            migrationBuilder.CreateIndex(
                name: "idxenginetypename",
                table: "engine_types",
                column: "engine_type_name");

            migrationBuilder.CreateIndex(
                name: "idxepaclassname",
                table: "epa_classes",
                column: "epa_class_name");

            migrationBuilder.CreateIndex(
                name: "inventory_items_inv_itmpic_idx",
                table: "inventory_item_pictures",
                column: "fk_inventory_items_id");

            migrationBuilder.CreateIndex(
                name: "idxpicturename",
                table: "inventory_item_pictures",
                column: "picture_name");

            migrationBuilder.CreateIndex(
                name: "colors_inventory_Items_idx",
                table: "inventory_items",
                column: "fk_colors_id");

            migrationBuilder.CreateIndex(
                name: "products_inventory_items_idx",
                table: "inventory_items",
                column: "fk_products_id");

            migrationBuilder.CreateIndex(
                name: "warranties_inventory_items_idx",
                table: "inventory_items",
                column: "fk_warranties_id");

            migrationBuilder.CreateIndex(
                name: "idxvin",
                table: "inventory_items",
                column: "vin");

            migrationBuilder.CreateIndex(
                name: "idxmakename",
                table: "makes",
                column: "make_name");

            migrationBuilder.CreateIndex(
                name: "makes_models_idx",
                table: "models",
                column: "fk_makes_id");

            migrationBuilder.CreateIndex(
                name: "idxmodelname",
                table: "models",
                column: "model_name");

            migrationBuilder.CreateIndex(
                name: "order_details_orders_idx",
                table: "order_details",
                column: "fk_orders_id");

            migrationBuilder.CreateIndex(
                name: "order_details_products_idx",
                table: "order_details",
                column: "fk_products_id");

            migrationBuilder.CreateIndex(
                name: "orders_customers_idx",
                table: "orders",
                column: "fk_customers_id");

            migrationBuilder.CreateIndex(
                name: "idxdescription",
                table: "products",
                column: "description");

            migrationBuilder.CreateIndex(
                name: "body_styles_products_idx",
                table: "products",
                column: "fk_body_styles_id");

            migrationBuilder.CreateIndex(
                name: "product_categories_idx",
                table: "products",
                column: "fk_categories_id");

            migrationBuilder.CreateIndex(
                name: "drive_trains_products_idx",
                table: "products",
                column: "fk_drive_trains_id");

            migrationBuilder.CreateIndex(
                name: "engine_types_products_idx",
                table: "products",
                column: "fk_engine_types_id");

            migrationBuilder.CreateIndex(
                name: "epa_classes_products_idx",
                table: "products",
                column: "fk_epa_classes_id");

            migrationBuilder.CreateIndex(
                name: "makes_products_idx",
                table: "products",
                column: "fk_makes_id");

            migrationBuilder.CreateIndex(
                name: "models_products_idx",
                table: "products",
                column: "fk_models_id");

            migrationBuilder.CreateIndex(
                name: "transmissions_products_idx",
                table: "products",
                column: "fk_transmissions_id");

            migrationBuilder.CreateIndex(
                name: "idxsku",
                table: "products",
                column: "sku");

            migrationBuilder.CreateIndex(
                name: "idxupc",
                table: "products",
                column: "upc");

            migrationBuilder.CreateIndex(
                name: "shopping_customers_idx",
                table: "shopping_cart_records",
                column: "fk_customers_id");

            migrationBuilder.CreateIndex(
                name: "shopping_products_idx",
                table: "shopping_cart_records",
                column: "fk_products_id");

            migrationBuilder.CreateIndex(
                name: "idxtransname",
                table: "transmissions",
                column: "transmission_name");

            migrationBuilder.CreateIndex(
                name: "idxwarrantyname",
                table: "warranties",
                column: "warranty_name");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "category_pictures");

            migrationBuilder.DropTable(
                name: "inventory_item_pictures");

            migrationBuilder.DropTable(
                name: "order_details");

            migrationBuilder.DropTable(
                name: "shopping_cart_records");

            migrationBuilder.DropTable(
                name: "inventory_items");

            migrationBuilder.DropTable(
                name: "orders");

            migrationBuilder.DropTable(
                name: "colors");

            migrationBuilder.DropTable(
                name: "products");

            migrationBuilder.DropTable(
                name: "warranties");

            migrationBuilder.DropTable(
                name: "customers");

            migrationBuilder.DropTable(
                name: "body_styles");

            migrationBuilder.DropTable(
                name: "categories");

            migrationBuilder.DropTable(
                name: "drive_trains");

            migrationBuilder.DropTable(
                name: "engine_types");

            migrationBuilder.DropTable(
                name: "epa_classes");

            migrationBuilder.DropTable(
                name: "models");

            migrationBuilder.DropTable(
                name: "transmissions");

            migrationBuilder.DropTable(
                name: "makes");
        }
    }
}
